extends base

block content
  main.main
    if tours.length === 0
      h1 No Tours found
    else
      .filter_controls
        form.form--filter
          .form__group_control
            label.form__label(for='sort') Sort By:
            select#sort.form__input.control_inputs(name='sort')
              option(value='' selected) Select Option
              option(value='-createdAt') Newest Tours
              option(value='-ratingsAverage') Highest Rating
              option(value='ratingsAverage') Lowest Rating
              option(value='-price') Highest Price
              option(value='price') Lowest Price
              //- Add more options as needed for other fields

          .form__group_control
            label.form__label(for='duration') Duration (days):
            input#duration.form__input.control_inputs( style = 'width:6rem' placeholder="Day" name='duration', type='number',value='', min='1', step='1')

          .form__group_control
            label.form__label(for='difficulty') Difficulty:
            select#difficulty.form__input.control_inputs(name='difficulty')
              option(value='' selected) Select Option
              option(value='easy') Easy
              option(value='medium') Medium
              option(value='difficult') Difficult
          button.btn_control.btn--green(type='submit') Apply
      .card-container
        each tour in tours
          a.linkTotour(href=`/tour/${tour.slug}`)
            .card__header
              .card__picture
                .card__picture-overlay &nbsp;
                img.card__picture-img(src=`/img/tours/${tour.imageCover}`, alt=`${tour.name}`)
              h3.heading-tertirary
                span= tour.name

            .card__details
              h4.card__sub-heading= `${tour.difficulty}-${tour.duration}-day tour`
              p.card__text= tour.summary
              .card__data
                svg.card__icon
                  use(xlink:href='/img/icons.svg#icon-map-pin')
                span= tour.startLocation.description
              .card__data
                svg.card__icon
                  use(xlink:href='/img/icons.svg#icon-calendar')
                span= `${new Date(tour.startDates[0]).toLocaleString('en-us', {month: 'long'})} ${new Date(tour.startDates[0]).getFullYear()}`
                //- span= tour.startDates[0].toLocaleString('en-us', {month: 'long', year: 'numeric'})
              .card__data
                svg.card__icon
                  use(xlink:href='/img/icons.svg#icon-flag')
                span= `${tour.locations.length} stops`
              .card__data
                svg.card__icon
                  use(xlink:href='/img/icons.svg#icon-user')
                span= `${tour.maxGroupSize} people`

            .card__footer
              p
                span.card__footer-value= `$${tour.price}`
                | 
                span.card__footer-text / person
              p.card__ratings
                span.card__footer-value= tour.ratingsAverage
                | 
                span.card__footer-text= `rating (${tour.ratingsQuantity})`
      .pagination_container(data-total-pages-n = `${totalPagesNumber}`)
        .pagination
          ul
      script(src="/js/pagination.js") 